---
version: "3.9"

x-build:
  &default-build
  context: .
  dockerfile: Dockerfile

x-app-vars:
  &default-app-vars
  DAGSTER_POSTGRES_HOSTNAME: "postgresql"
  DAGSTER_POSTGRES_DB: "postgres_db"
  DAGSTER_POSTGRES_USER: "postgres_user"
  DAGSTER_POSTGRES_PASSWORD: "postgres_password"

services:

  # ----------------------------------------- #
  #                  Dagster
  # ----------------------------------------- #
  dagit:
    build:
      << : *default-build
      target: dagit
    container_name: dagit
    restart: on-failure
    environment:
      << : *default-app-vars
    ports:
      - "3000:3000"
    depends_on:
      - postgresql
    profiles:
      - dagster
    volumes:
      - ./${COURSE_WEEK}/dagster.yaml:/opt/dagster/dagster_home/dagster.yaml
      - ./${COURSE_WEEK}/workspace.yaml:/opt/dagster/dagster_home/workspace.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - dagster_network

  dagster-daemon:
    build:
      << : *default-build
      target: daemon
    container_name: dagster-daemon
    restart: on-failure
    environment:
      << : *default-app-vars
    depends_on:
      - postgresql
    profiles:
      - dagster
    volumes:
      - ./${COURSE_WEEK}/dagster.yaml:/opt/dagster/dagster_home/dagster.yaml
      - ./${COURSE_WEEK}/workspace.yaml:/opt/dagster/dagster_home/workspace.yaml
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    networks:
      - dagster_network

  # ----------------------------------------- #
  #                 Storage
  # ----------------------------------------- #
  postgresql:
    image: postgres:11
    container_name: postgresql
    environment:
      POSTGRES_DB: "postgres_db"
      POSTGRES_USER: "postgres_user"
      POSTGRES_PASSWORD: "postgres_password"
    profiles:
      - dagster
    volumes:
      - ./${COURSE_WEEK}/postgres-dagster:/var/lib/postgresql/data
    networks:
      - dagster_network

  redis:
    image: redis:6.2-alpine
    container_name: redis
    restart: always
    profiles:
      - dagster
    networks:
      - dagster_network

  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "4566:4566"
    environment:
      HOSTNAME: localhost
      SERVICES: s3
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      DEFAULT_REGION: us-east-1
    volumes:
      - ./${COURSE_WEEK}/data://opt/code/localstack/data
      - ./${COURSE_WEEK}/local_stack.sh:/docker-entrypoint-initaws.d/create_localstack_infra.sh
    networks:
      - dagster_network

  # ----------------------------------------- #
  #                   UCR
  # ----------------------------------------- #
  dagster-ucr:
    build:
      << : *default-build
      target: week_2
    container_name: dagster-ucr
    restart: always
    environment:
      << : *default-app-vars
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
    depends_on:
      - localstack
    volumes:
      - ./${COURSE_WEEK}/dagster_ucr:/opt/dagster/dagster_home/dagster_ucr
    profiles:
      - week_2
    networks:
      - dagster_network

  content:
    build:
      << : *default-build
      target: week_3_4_content
      args:
        COURSE_WEEK: ${COURSE_WEEK}
    container_name: content
    restart: always
    environment:
      << : *default-app-vars
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
    depends_on:
      - localstack
    volumes:
      - ./${COURSE_WEEK}/content:/opt/dagster/dagster_home/content
    profiles:
      - week_3_4
    networks:
      - dagster_network

  project:
    build:
      << : *default-build
      target: week_3_4_project
      args:
        COURSE_WEEK: ${COURSE_WEEK}
    container_name: project
    restart: always
    environment:
      << : *default-app-vars
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
    depends_on:
      - localstack
    volumes:
      - ./${COURSE_WEEK}/project:/opt/dagster/dagster_home/project
    profiles:
      - week_3_4
    networks:
      - dagster_network

networks:
  dagster_network:
    driver: bridge
    name: dagster_network

volumes:
  postgresql:
